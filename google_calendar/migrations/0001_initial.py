# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-05 05:54
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GoogleCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_updated_at', models.DateTimeField(auto_now=True)),
                ('db_created_at', models.DateTimeField(auto_now_add=True)),
                ('email_address', models.CharField(max_length=255)),
                ('sync_detail', django.contrib.postgres.fields.jsonb.JSONField(default={'sync_state': 'uninitialized'})),
                ('sync_user_history', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('last_sync_datetime', models.DateTimeField(default=None, null=True)),
                ('is_kept_in_sync', models.BooleanField(default=True)),
                ('timezone', models.CharField(default='America/Los_Angeles', max_length=50)),
            ],
            options={
                'db_table': 'google_calendar',
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarApiLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_created_at', models.DateTimeField(auto_now_add=True)),
                ('user_email_address', models.CharField(max_length=255)),
                ('resource', models.CharField(max_length=50)),
                ('args', django.contrib.postgres.fields.jsonb.JSONField()),
                ('response', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'google_calendar_api_log',
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_updated_at', models.DateTimeField(auto_now=True)),
                ('db_created_at', models.DateTimeField(auto_now_add=True)),
                ('attendees', django.contrib.postgres.fields.jsonb.JSONField(default=[])),
                ('created', models.DateTimeField()),
                ('creator', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('description', models.TextField(blank=True, default='')),
                ('end', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('html_link', models.CharField(blank=True, default='', max_length=2083)),
                ('event_id', models.CharField(blank=True, default='', max_length=1024)),
                ('organizer', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('recurring_event_id', models.CharField(blank=True, default='', max_length=1024)),
                ('start', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('status', models.CharField(blank=True, default='', max_length=10)),
                ('summary', models.TextField(blank=True, default='')),
                ('updated', models.DateTimeField()),
                ('process_time', models.DateTimeField(db_index=True, default=None, null=True)),
            ],
            options={
                'db_table': 'google_calendar_event',
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarListSyncState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_created_at', models.DateTimeField(auto_now_add=True)),
                ('sync_detail', django.contrib.postgres.fields.jsonb.JSONField(default={})),
            ],
            options={
                'db_table': 'google_calendar_list_sync_state',
            },
        ),
    ]
