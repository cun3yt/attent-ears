"""
Django settings for ears project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

from .auth_settings import *

import os
import daiquiri
import logging

daiquiri.setup(level=logging.INFO)
logger = daiquiri.getLogger()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

EARS_ENV=os.environ.get('EARS_ENV')
SECRET_KEY = os.environ.get('SECRET_KEY')

DEBUG = (EARS_ENV == 'dev')

ALLOWED_HOSTS = [
    'localhost',
    '.herokuapp.com',
    '.ngrok.io',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'apps.google_calendar',
    'social_django',
    'apps.api_connection',
    'apps.outreach',
    'apps.salesforce',
    'apps.visualizer',
    'apps.attent_calendar',
    'apps.slack',
    'sslserver',
    'stringcase',
    'django.contrib.postgres',
    'psqlextra',
    'django_rq',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ears.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'ears.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'psqlextra.backend',
        'NAME': os.environ.get('EARS_PROD_DB_NAME'),
        'USER': os.environ.get('EARS_PROD_DB_USER'),
        'PASSWORD': os.environ.get('EARS_PROD_DB_PASSWORD'),
        'HOST': os.environ.get('EARS_PROD_DB_HOST'),
        'PORT': os.environ.get('EARS_PROD_DB_PORT'),
    },
    'warehouse': {
        'ENGINE': 'django_redshift_backend',
        'NAME': os.environ.get('EARS_WAREHOUSE_DB_NAME'),
        'USER': os.environ.get('EARS_WAREHOUSE_DB_USER'),
        'PASSWORD': os.environ.get('EARS_WAREHOUSE_DB_PASSWORD'),
        'HOST': os.environ.get('EARS_WAREHOUSE_DB_HOST'),
        'PORT': os.environ.get('EARS_WAREHOUSE_DB_PORT'),
    },
}

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static_files_compiled')
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

logger.debug("BASE_DIR: {}".format(BASE_DIR))
logger.debug("PROJECT_ROOT: {}".format(PROJECT_ROOT))
logger.debug("STATIC_ROOT: {}".format(STATIC_ROOT))
logger.debug("STATIC_URL: {}".format(STATIC_URL))
logger.debug("STATICFILES_DIRS: {}".format(', '.join(STATICFILES_DIRS)))

# Slack

SLACK_VERIFICATION_TOKEN = os.environ.get('SLACK_VERIFICATION_TOKEN')

RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        'DEFAULT_TIMEOUT': 500,
    },
}
